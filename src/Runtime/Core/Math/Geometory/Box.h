//***********************************************************
//! @file
//! @brief		ボックス構造体
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Runtime/Core/Math/Vector/include.h>

namespace ob {

    //@―---------------------------------------------------------------------------
    //! @brief      ボックス構造体(Axis-Alined Box)
    //! 
    //! @details    ボックスは内部的に中心座標とサイズで管理されます。
    //! @note       size が負の数の時は未定義動作です。
    //@―---------------------------------------------------------------------------
    struct OB_API Box {
    public:

        //===============================================================
        //  コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief          デフォルトコンストラクタ(初期化なし)
        //@―---------------------------------------------------------------------------
        Box()noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ( ゼロ初期化 )
        //@―---------------------------------------------------------------------------
        Box(EForceInit)noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ(サイズ/中心指定)
        //@―---------------------------------------------------------------------------
        Box(const Vec3& size, const Vec3& center = Vec3::zero)noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ(点群指定)
        //! 
        //! @details        指定された点群をすべて含む最小のボックスを構築する。
        //!                 要素数が1以下の時は Reset() が呼び出される。
        //@―---------------------------------------------------------------------------
        Box(const gsl::span<Vec3>& points)noexcept;


        //===============================================================
        //  オペレータ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief          比較演算子
        //@―---------------------------------------------------------------------------
        bool operator==(const Box& other)const noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          加算演算子
        //! 
        //! @details        ポイントを含むようにボックスを拡大する。
        //!                 元のボックスが空の場合は何もしない。
        //! @param point    ポイント
        //@―---------------------------------------------------------------------------
        Box  operator+(const Vec3& point)const noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          加算演算子
        //! 
        //! @details        ポイントを含むようにボックスを拡大する。
        //!                 元のボックスが空の場合は何もしない。
        //! @param point    ポイント
        //@―---------------------------------------------------------------------------
        Box& operator+=(const Vec3& point)noexcept;


        //===============================================================
        //  セッター
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief          中心とサイズから Box を設定
        //! 
        //! @details        点群を含む最小の Box に設定する
        //@―---------------------------------------------------------------------------
        void Set(const Vec3& center, const Vec3& size = Vec3::zero)noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          点群から Box を設定
        //! 
        //! @details        点群を含む最小の Box に設定する。
        //!                 要素数が0の時は Reset() が呼び出される。
        //@―---------------------------------------------------------------------------
        void Set(const gsl::span<Vec3>& points)noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          構造体をゼロ初期化する
        //@―---------------------------------------------------------------------------
        void Reset()noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief          size を絶対値に更新
        //@―---------------------------------------------------------------------------
        void Normalize()noexcept;

        //@―---------------------------------------------------------------------------
        //! @brief          size を絶対値に更新
        //@―---------------------------------------------------------------------------
        void SetStartEnd(const Vec3& start, const Vec3& end)noexcept;


        //===============================================================
        //  ゲッター
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief      ボックスの起点となる頂点を取得
        //! 
        //! @see        GetEnd()
        //@―---------------------------------------------------------------------------
        Vec3 GetStart()const noexcept;


        //@―---------------------------------------------------------------------------
        //! @brief      GetStart() と対角となる頂点を取得
        //! 
        //! @see        GetStart()
        //@―---------------------------------------------------------------------------
        Vec3 GetEnd()const noexcept;


        //===============================================================
        //  判定
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief      サイズが0
        //@―---------------------------------------------------------------------------
        bool IsEmpty()const noexcept;

    public:

        Vec3    center;     //!< ボックスの中心座標
        Vec3    size;       //!< ボックスのサイズ

    };






    //===============================================================
    // インライン関数
    //===============================================================
    //! @cond

    //@―---------------------------------------------------------------------------
    //! @brief          デフォルトコンストラクタ(初期化なし)
    //@―---------------------------------------------------------------------------
    inline Box::Box()noexcept {}


    //@―---------------------------------------------------------------------------
    //! @brief          コンストラクタ( ゼロ初期化 )
    //@―---------------------------------------------------------------------------
    inline Box::Box(EForceInit)noexcept {
        Reset();
    }


    //@―---------------------------------------------------------------------------
    //! @brief          コンストラクタ(サイズ/中心指定)
    //@―---------------------------------------------------------------------------
    inline Box::Box(const Vec3& size, const Vec3& center)noexcept {
        Set(size, center);
    }


    //@―---------------------------------------------------------------------------
    //! @brief          比較演算子
    //@―---------------------------------------------------------------------------
    inline bool Box::operator==(const Box& other)const noexcept {
        return (center == other.center) && (size == other.size);
    }


    //@―---------------------------------------------------------------------------
    //! @brief          加算演算子
    //! 
    //! @details        ポイントを含むようにボックスを拡大する。
    //!                 元のボックスが空の場合は何もしない。
    //! @param point    ポイント
    //@―---------------------------------------------------------------------------
    inline Box Box::operator+(const Vec3& point)const noexcept {
        return Box(*this) += point;
    }


    //@―---------------------------------------------------------------------------
    //! @brief          加算演算子
    //! 
    //! @details        ポイントを含むようにボックスを拡大する。
    //! @param point    ポイント
    //@―---------------------------------------------------------------------------
    inline Box& Box::operator+=(const Vec3& point)noexcept {
        if (IsEmpty()) {
            return *this;
        }

        Vec3 min = center - size * 0.5f;
        Vec3 max = center + size * 0.5f;

        min = Vec3::Min(min, point);
        max = Vec3::Max(max, point);

        center = (min + max) * 0.5f;
        size = max - min;

        return *this;
    }


    //@―---------------------------------------------------------------------------
    //! @brief      中心とサイズから Box を設定
    //! 
    //! @detail     点群を含む最小の Box に設定する
    //@―---------------------------------------------------------------------------
    inline void Box::Set(const Vec3& size, const Vec3& center)noexcept {
        this->size = size;
        this->center = center;
    }


    //@―---------------------------------------------------------------------------
    //! @brief      構造体をゼロ初期化する
    //@―---------------------------------------------------------------------------
    inline void Box::Reset()noexcept {
        center.SetZero();
        size.SetZero();
    }


    //@―---------------------------------------------------------------------------
    //! @brief      size を絶対値に更新
    //@―---------------------------------------------------------------------------
    inline void Box::Normalize()noexcept {
        size = Vec3::Abs(size);
    }


    //@―---------------------------------------------------------------------------
    //! @brief      2点を指定して Box を設定
    //@―---------------------------------------------------------------------------
    inline void Box::SetStartEnd(const Vec3& start, const Vec3& end) noexcept {
        center = (start + end) * 0.5f;
        size = Vec3::Abs(start - end);
    }


    //@―---------------------------------------------------------------------------
    //! @brief      ボックスの起点となる頂点を取得
    //! 
    //! @see        GetEnd()
    //@―---------------------------------------------------------------------------
    inline Vec3 Box::GetStart()const noexcept {
        return center + size * 0.5f;
    }


    //@―---------------------------------------------------------------------------
    //! @brief      GetStart() と対角となる頂点を取得
    //! 
    //! @see        GetStart()
    //@―---------------------------------------------------------------------------
    inline Vec3 Box::GetEnd()const noexcept {
        return center - size * 0.5f;
    }


    //@―---------------------------------------------------------------------------
    //! @brief      サイズが0
    //@―---------------------------------------------------------------------------
    inline bool Box::IsEmpty()const noexcept {
        return size.IsZero();
    }

    //! @endcond
}// namespcae ob