//***********************************************************
//! @file
//! @brief		システムヒープ(Windows)
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Foundation/Memory/Heap/Heap.h>

#include <Windows.h>


namespace ob {

    //@―---------------------------------------------------------------------------
    //! @brief		OSヒープ
    //! 
    //! @details	システムのnewから動的に割り当てるアロケータ。
    //@―---------------------------------------------------------------------------
    class SystemHeap final :public Heap {
        friend class Heap;
        friend class MemoryDevice;
    public:

        //===============================================================
        //  コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief                  デストラクタ
        //@―---------------------------------------------------------------------------
        ~SystemHeap() override;


        //@―---------------------------------------------------------------------------
        //! @brief                  内部アロケート情報のクリア
        //@―---------------------------------------------------------------------------
        void Release() override;


        //===============================================================
        //  メモリ確保 /解放
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief	                メモリの確保
        //! 
        //! @param[in] size         確保サイズ
        //! @param[in] alignment    アライメント
        //! @param[in] zeroClear    確保したバッファをゼロで初期化するか
        //@―---------------------------------------------------------------------------
        void* Allocate(size_t size, u32 alignment, bool zeroClear) override;


        //@―---------------------------------------------------------------------------
        //! @brief	                メモリの開放
        //@―---------------------------------------------------------------------------
        void Deallocate(void* pBuffer) override;


        //===============================================================
        //  取得
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief	                ヒープ名の取得
        //@―---------------------------------------------------------------------------
        Char* GetName() const override;


        //@―---------------------------------------------------------------------------
        //! @brief	                アロケータのヒープサイズを取得
        //@―---------------------------------------------------------------------------
        size_t GetHeapSize() const override;


        //@―---------------------------------------------------------------------------
        //! @brief	                アロケータの使用可能なヒープサイズを取得
        //@―---------------------------------------------------------------------------
        size_t GetFreeHeapSize() const override;


        //@―---------------------------------------------------------------------------
        //! @brief	                利用可能な状態かどうか
        //@―---------------------------------------------------------------------------
        bool IsValid()const override;


    protected:

        //@―---------------------------------------------------------------------------
        //! @brief	                コンストラクタ
        //@―---------------------------------------------------------------------------
        SystemHeap();

    private:

        HANDLE m_handle;
        Char* m_pName;

    };






    //===============================================================
    // インライン関数
    //===============================================================

}// namespace ob