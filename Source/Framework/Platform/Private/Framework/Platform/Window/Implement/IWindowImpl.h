//***********************************************************
//! @file
//! @brief		ウィンドウ・インターフェース
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Platform/Type/SystemEventType.h>
#include <Framework/Platform/Type/CursorType.h>
#include <Framework/Platform/Type/WindowDesc.h>
#include <Framework/Platform/Type/WindowState.h>

namespace ob::platform {

    //@―---------------------------------------------------------------------------
    //! @brief  ウィンドウ・インターフェース
    //@―---------------------------------------------------------------------------
    class IWindowImpl {
    public:

        //@―---------------------------------------------------------------------------
        //! @brief  デストラクタ
        //@―---------------------------------------------------------------------------
        virtual ~IWindowImpl() {};


        //===============================================================
        // ウィンドウ操作
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  表示
        //@―---------------------------------------------------------------------------
        virtual void    show() = 0;


        //@―---------------------------------------------------------------------------
        //! @brief  閉じる
        //@―---------------------------------------------------------------------------
        virtual void    close() = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウを最大化する
        //@―---------------------------------------------------------------------------
        virtual void maximize() = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウを最小化する
        //@―---------------------------------------------------------------------------
        virtual void minimize() = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウを現在のモニタの中央に移動する
        //@―---------------------------------------------------------------------------
        virtual void moveToCenter() = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウサイズを元のサイズに戻す
        //@―---------------------------------------------------------------------------
        virtual void restoreSize() = 0;


        //===============================================================
        // 情報取得
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief              妥当な状態か
        //! 
        //! @details            システムからウィンドウのクローズ処理が呼ばれた場合false
        //!                     を返すようになります。
        //@―---------------------------------------------------------------------------
        virtual bool isValid()const noexcept = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      メインウィンドウか
        //@―---------------------------------------------------------------------------
        virtual  bool isMainWindow()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウの状態を取得する
        //@―---------------------------------------------------------------------------
        virtual WindowStates getState()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief              スクリーン座標を取得
        //! 
        //! @details            クライアント座標をスクリーン座標に変換して取得する。
        //! @param clientPoint  クライアント座標
        //! @return             スクリーン座標
        //@―---------------------------------------------------------------------------
        virtual Vec2 getScreenPoint(const Vec2& clientPoint)const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief              クライアント座標を取得
        //! 
        //! @details            スクリーン座標をクライアント座標に変換して取得する。
        //! @param screenPoint  スクリーン座標  
        //! @return             クライアント座標
        //@―---------------------------------------------------------------------------
        virtual Vec2 getClientPoint(const Vec2& screenPoint)const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウのタイトルを設定する
        //@―---------------------------------------------------------------------------
        virtual void setTitle(StringView getTitle) = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウのタイトルを設定する
        //@―---------------------------------------------------------------------------
        virtual const String& getTitle()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウの位置を設定する
        //@―---------------------------------------------------------------------------
        virtual void setPosition(Vec2 position) = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウの位置を取得する
        //@―---------------------------------------------------------------------------
        virtual Vec2 getPosition()const noexcept = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウのサイズを設定する
        //@―---------------------------------------------------------------------------
        virtual void setSize(Vec2 size) = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウサイズを取得
        //@―---------------------------------------------------------------------------
        virtual Vec2 getSize()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウ・モードを設定する
        //@―---------------------------------------------------------------------------
        virtual void setMode(WindowMode mode) = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウ・モードを取得する
        //@―---------------------------------------------------------------------------
        virtual WindowMode getMode()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウのスタイルを取得する
        //@―---------------------------------------------------------------------------
        virtual WindowStyle getStyle()const = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウのスタイルを設定する
        //@―---------------------------------------------------------------------------
        virtual void setStyle(WindowStyle style) = 0;


        //@―---------------------------------------------------------------------------
        //! @brief      ハンドル取得
        //@―---------------------------------------------------------------------------
        virtual void* getHandle()const = 0;

        virtual String getTextInput() = 0;

        //===============================================================
        // イベント
        //===============================================================


        //@―---------------------------------------------------------------------------
        //! @brief      ウィンドウ・イベントのリスナを追加する
        //@―---------------------------------------------------------------------------
        virtual void addEventListener(WindowEventHandle& handle, WindowEventNotifier::delegate_type& func) = 0;

    };

}