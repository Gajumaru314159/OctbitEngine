//***********************************************************
//! @file
//! @brief		
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Core/CorePrivate.h>

namespace ob::core {

	//@―---------------------------------------------------------------------------
	//! @brief  INIセクションオブジェクト
	//@―---------------------------------------------------------------------------
	class INISection {
	public:
		INISection() = default;

		//@―---------------------------------------------------------------------------
		//! @brief  キーを指定して要素アクセス
		//@―---------------------------------------------------------------------------
		String& operator[](String key);

		//@―---------------------------------------------------------------------------
		//! @brief  キーとフォールバックを指定して要素を取得
		//@―---------------------------------------------------------------------------
		String get(String key, String fallback)const;

		//@―---------------------------------------------------------------------------
		//! @brief  対象のキーが存在するか
		//@―---------------------------------------------------------------------------
		bool has(String key)const;

		//@―---------------------------------------------------------------------------
		//! @brief  対象のキーを削除
		//@―---------------------------------------------------------------------------
		bool remove(String key);

		//@―---------------------------------------------------------------------------
		//! @brief  要素をすべて削除
		//@―---------------------------------------------------------------------------
		void clear();

		//@―---------------------------------------------------------------------------
		//! @brief  要素数
		//@―---------------------------------------------------------------------------
		s32 size()const;

		//@―---------------------------------------------------------------------------
		//! @brief  Beginイテレータ
		//@―---------------------------------------------------------------------------
		auto begin()const { return m_container.cbegin(); }

		//@―---------------------------------------------------------------------------
		//! @brief  Endイテレータ
		//@―---------------------------------------------------------------------------
		auto end()const { return m_container.cend(); }

	private:
		Map<String, String> m_container;
	};

	//@―---------------------------------------------------------------------------
	//! @brief  INIオブジェクト
	//@―---------------------------------------------------------------------------
	class INI {
	public:

		//@―---------------------------------------------------------------------------
		//! @brief  INIオブジェクトを生成
		//@―---------------------------------------------------------------------------
		INI();

		//@―---------------------------------------------------------------------------
		//! @brief  ファイルから設定をロードして生成
		//@―---------------------------------------------------------------------------
		INI(String path);

		//@―---------------------------------------------------------------------------
		//! @brief  ~デストラクタ
		//@―---------------------------------------------------------------------------
		~INI();

		//@―---------------------------------------------------------------------------
		//! @brief  ファイルから設定をロード
		//@―---------------------------------------------------------------------------
		bool load(String path);

		//@―---------------------------------------------------------------------------
		//! @brief  ファイルに設定をセーブ
		//! @details ファイル名が未設定の場合、ロード時のパスに上書き保存されます。
		//@―---------------------------------------------------------------------------
		bool save(String path = "");

		//@―---------------------------------------------------------------------------
		//! @brief  文字列から設定をロード
		//@―---------------------------------------------------------------------------
		bool parse(String str);

		//@―---------------------------------------------------------------------------
		//! @brief  文字列として出力
		//@―---------------------------------------------------------------------------
		String string();

		//@―---------------------------------------------------------------------------
		//! @brief  キーを指定して要素アクセス
		//@―---------------------------------------------------------------------------
		INISection& operator[](String key);

		//@―---------------------------------------------------------------------------
		//! @brief  キーとフォールバックを指定して要素を取得
		//@―---------------------------------------------------------------------------
		String get(String section, String key, String fallback = "")const;

		//@―---------------------------------------------------------------------------
		//! @brief  対象のセクションが存在するか
		//@―---------------------------------------------------------------------------
		bool has(String section)const;

		//@―---------------------------------------------------------------------------
		//! @brief  対象のキーが存在するか
		//@―---------------------------------------------------------------------------
		bool has(String section,String key)const;

		//@―---------------------------------------------------------------------------
		//! @brief  対象のセクションを削除
		//@―---------------------------------------------------------------------------
		void remove(String section);

		//@―---------------------------------------------------------------------------
		//! @brief  対象のキーを削除
		//@―---------------------------------------------------------------------------
		void remove(String section,String key);

		//@―---------------------------------------------------------------------------
		//! @brief  要素をすべて削除
		//@―---------------------------------------------------------------------------
		void clear();

		//@―---------------------------------------------------------------------------
		//! @brief  要素数
		//@―---------------------------------------------------------------------------
		s32 size()const;

		//@―---------------------------------------------------------------------------
		//! @brief  要素が空か
		//@―---------------------------------------------------------------------------
		bool empty()const;

		//@―---------------------------------------------------------------------------
		//! @brief  Beginイテレータ
		//@―---------------------------------------------------------------------------
		auto begin()const { return m_container.cbegin(); }

		//@―---------------------------------------------------------------------------
		//! @brief  Endイテレータ
		//@―---------------------------------------------------------------------------
		auto end()const { return m_container.cend(); }

	private:
		String m_path;
		Map<String, INISection> m_container;
	};

}