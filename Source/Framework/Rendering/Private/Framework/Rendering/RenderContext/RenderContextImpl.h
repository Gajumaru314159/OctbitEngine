//***********************************************************
//! @file
//! @brief		ファイル説明
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Rendering/RenderContext.h>
#include <Framework/Graphic/CommandList.h>
#include <Framework/Rendering/Camera.h>

namespace ob::rendering {

    //@―---------------------------------------------------------------------------
    //! @brief  
    //! 
    //! @details    内部的にCommandBufferを持っています。独自の描画方法を使用する場合は
    //! CommandBufferに直接コマンドを記録し、executeCommandBuffer()を記録してください。
    //@―---------------------------------------------------------------------------
    class RenderContextImpl:public RenderContext{
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief      コンストラクタ
        //@―---------------------------------------------------------------------------
        RenderContextImpl();


        //@―---------------------------------------------------------------------------
        //! @brief      RenderPass を開始
        //@―---------------------------------------------------------------------------
        void beginRenderPass(s32 width, s32 height)override;

        //@―---------------------------------------------------------------------------
        //! @brief      サブパスを開始
        //@―---------------------------------------------------------------------------
        void beginSubPass(/*colors,inputs*/)override;


        //@―---------------------------------------------------------------------------
        //! @brief      カメラのプロパティをグローバル変数に書き込む
        //@―---------------------------------------------------------------------------
        void setCamera(const Camera& camera)override;

        //@―---------------------------------------------------------------------------
        //! @brief      特定の描画タグを持つ描画アイテムを描画する
        //@―---------------------------------------------------------------------------
        void draw(/*tag,sort,filter*/)override;// Debug / Shadow / UI

        //@―---------------------------------------------------------------------------
        //! @brief      カスタムコマンドバッファーを記録
        //! 
        //! @details    この関数を呼び出すと、RenderContext内部のCommandBufferにカスタムCommandBufferの内容がコピーされます。
        //!             呼出し後にカスタムCommandBufferを再利用しない場合はCommandBufferをクリアしてください。
        //@―---------------------------------------------------------------------------
        void executeCustomCommand(const CommandBuffer&)override;

        //@―---------------------------------------------------------------------------
        //! @brief      
        //@―---------------------------------------------------------------------------
        void invokeOnRenderObjectCallBack()override;


        //@―---------------------------------------------------------------------------
        //! @brief      サブパスを終了
        //@―---------------------------------------------------------------------------
        void endSubPass()override;

        //@―---------------------------------------------------------------------------
        //! @brief      RenderPass を終了
        //@―---------------------------------------------------------------------------
        void endRenderPass()override;

        //@―---------------------------------------------------------------------------
        //! @brief      記録された全てのコマンドを実行
        //! 
        //! @details    記録されているコマンドを即時実行し、実行が終わるまで待機します。
        //@―---------------------------------------------------------------------------
        void submit()override;

    private:

        graphic::CommandList m_commandList;

    };

}// namespcae ob