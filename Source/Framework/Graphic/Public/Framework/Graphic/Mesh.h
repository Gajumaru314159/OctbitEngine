//***********************************************************
//! @file
//! @brief		メッシュバッファ
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/RHI/Types/PipelineStateDesc.h>
#include <Framework/Graphic/MeshData.h>

namespace ob::graphic {

	//@―---------------------------------------------------------------------------
	//! @brief		メッシュ
	//! @details	メッシュには複数のサブメッシュが含まれます。
	//!				サブメッシュの数は描画に使用するマテリアル数と一致します。
	//!				複数のサブメッシュを使用せずにマテリアル毎にMeshを分ける場合は
	//!				GPU上のバッファも分割されます。
	//@―---------------------------------------------------------------------------
	class Mesh : public RefObject {
	public:
		using VertexLayout = ob::rhi::VertexLayout;
	public:

		//@―---------------------------------------------------------------------------
		//!	@brief			メッシュデータから構築
		//@―---------------------------------------------------------------------------
		static Ref<Mesh> Create(const MeshData&);
		static Ref<Mesh> Create(MeshData&&);

	public:

		//@―---------------------------------------------------------------------------
		//!	@brief			頂点レイアウトを設定
		//! @details		setVertices で設定されるBlobの解釈方法を設定します。
		//@―---------------------------------------------------------------------------
		virtual const VertexLayout& getVertexLayout()const = 0;

		//@―---------------------------------------------------------------------------
		//!	@brief			メッシュデータを持っているか
		//@―---------------------------------------------------------------------------
		virtual bool hasMeshData()const = 0;

		//@―---------------------------------------------------------------------------
		//!	@brief			メッシュデータを取得
		//! @details		```hasMeshData() == false```の場合空のMeshDataを返す。
		//@―---------------------------------------------------------------------------
		virtual const MeshData& getMeshData()const = 0;

		//@―---------------------------------------------------------------------------
		//!	@brief			サブメッシュの数を取得
		//@―---------------------------------------------------------------------------
		virtual s32 getSubMeshCount()const = 0;

		//@―---------------------------------------------------------------------------
		//!	@brief			指定したインデックスのサブメッシュを取得
		//@―---------------------------------------------------------------------------
		virtual SubMesh getSubMesh(s32 index)const = 0;

		//@―---------------------------------------------------------------------------
		//!	@brief			サブメッシュのリストを取得
		//@―---------------------------------------------------------------------------
		virtual const Array<SubMesh>& getSubMeshes()const = 0;

	};

}// namespcae ob