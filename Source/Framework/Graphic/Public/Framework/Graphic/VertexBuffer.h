//***********************************************************
//! @file
//! @brief		頂点バッファ
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Graphic/Buffer.h>

namespace ob::graphic {

	//@―---------------------------------------------------------------------------
	//! @brief  頂点バッファ
	//@―---------------------------------------------------------------------------
	class VertexBuffer {
	public:

		//===============================================================
		// コンストラクタ / デストラクタ
		//===============================================================

		//@―---------------------------------------------------------------------------
		//! @brief  コンストラクタ
		//@―---------------------------------------------------------------------------
		VertexBuffer();


		//@―---------------------------------------------------------------------------
		//! @brief			コンストラクタ
		//!
		//! @param stribe	1頂点当たりのバイトサイズ
		//! @param count	最大頂点数
		//! @param usage	リソースの使用方法
		//@―---------------------------------------------------------------------------
		VertexBuffer(size_t stribe,size_t count, ResourceUsage usage = ResourceUsage::Dynamic);


		//@―---------------------------------------------------------------------------
		//! @brief			コンストラクタ
		//!
		//! @param stribe	1頂点当たりのバイトサイズ
		//! @param count	最大頂点数
		//! @param pData	データ
		//! @param usage	リソースの使用方法
		//@―---------------------------------------------------------------------------
		VertexBuffer(size_t stribe, size_t count, void* pData, ResourceUsage usage = ResourceUsage::Dynamic);


		//@―---------------------------------------------------------------------------
		//! @brief			頂点バッファのバイトサイズを取得
		//@―---------------------------------------------------------------------------
		size_t size()const;


		//@―---------------------------------------------------------------------------
		//! @brief			頂点数を取得
		//@―---------------------------------------------------------------------------
		size_t count()const;


		//@―---------------------------------------------------------------------------
		//! @brief			リソースの使用方法を変更
		//@―---------------------------------------------------------------------------
		void setResourceUsage(ResourceUsage usage)const;


		//@―---------------------------------------------------------------------------
		//! @brief			頂点データを更新
		//@―---------------------------------------------------------------------------
		void update(size_t size,void* pData);

	private:

		Buffer m_buffer;

	};






	//===============================================================
	// インライン関数
	//===============================================================
	//! @cond



	//! @endcond
}// namespcae ob