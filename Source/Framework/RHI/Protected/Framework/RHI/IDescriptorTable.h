//***********************************************************
//! @file
//! @brief		デスクリプタ・テーブル・インターフェイス
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/RHI/GraphicObject.h>

//===============================================================
//	前方宣言
//===============================================================
namespace ob::rhi {
	class Texture;
}


//===============================================================
// クラス宣言
//===============================================================
namespace ob::rhi {

	//@―---------------------------------------------------------------------------
	//! @brief      デスクリプタ・テーブル
	//@―---------------------------------------------------------------------------
	class IDescriptorTable :public GraphicObject {
	public:

		//@―---------------------------------------------------------------------------
		//! @brief  妥当な状態か
		//@―---------------------------------------------------------------------------
		virtual bool isValid()const = 0;


		//@―---------------------------------------------------------------------------
		//! @brief  リソースを設定
		//@―---------------------------------------------------------------------------
		//! @{
		virtual bool setResource(s32 index, class Buffer& resource) = 0;
		virtual bool setResource(s32 index, Texture& resource) = 0;
		//virtual bool setResource(s32 index, class Sampler& resource) = 0;
		//! @}


		//@―---------------------------------------------------------------------------
		//! @brief  リソースのバインドを解除
		//@―---------------------------------------------------------------------------
		virtual void clear() = 0;


		//@―---------------------------------------------------------------------------
		//! @brief  指定したインデックスのリソースのバインドを解除
		//@―---------------------------------------------------------------------------
		virtual void clearAt(s32 index) = 0;

	protected:

		virtual ~IDescriptorTable() = default;

	};

}// namespace pb::rhi