//***********************************************************
//! @file
//! @brief		コマンドリスト
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/RHI/Utility/GraphicObjectHolder.h>
#include <Framework/RHI/Types/CommandListDesc.h>
#include <Framework/RHI/Types/CommandParam.h>
#include <Framework/Core/Geometory/Viewport.h>

namespace ob::rhi {

    //@―---------------------------------------------------------------------------
    //! @brief      コマンドリスト
    //@―---------------------------------------------------------------------------
    class CommandList {
        OB_DEFINE_GRAPHIC_OBJECT_HOLDER(CommandList);
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        CommandList();


        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        CommandList(const CommandListDesc& desc);


        //@―---------------------------------------------------------------------------
        //! @brief  コマンドをシステムキューに追加
        //@―---------------------------------------------------------------------------
        void flush();


        //===============================================================
        // コマンド
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief      記録開始
        //@―---------------------------------------------------------------------------
        void begin();

        //@―---------------------------------------------------------------------------
        //! @brief      記録終了
        //@―---------------------------------------------------------------------------
        void end();

        //@―---------------------------------------------------------------------------
        //! @brief      レンダーパス開始
        //@―---------------------------------------------------------------------------
        void beginRenderPass(const class FrameBuffer& frameBuffer);

        //@―---------------------------------------------------------------------------
        //! @brief      次のサブパスに進める
        //@―---------------------------------------------------------------------------
        void nextSubpass();

        //@―---------------------------------------------------------------------------
        //! @brief      レンダーパス終了
        //@―---------------------------------------------------------------------------
        void endRenderPass();

        //@―---------------------------------------------------------------------------
        //! @brief      スワップチェーンにテクスチャを適用
        //@―---------------------------------------------------------------------------
        void applyDisplay(const class Display& display,const class Texture& texture);

        //@―---------------------------------------------------------------------------
        //! @brief      描画開始
        //@―---------------------------------------------------------------------------
        void beginRender(const class RenderTarget& target);

        //@―---------------------------------------------------------------------------
        //! @brief      描画終了
        //@―---------------------------------------------------------------------------
        void endRender();

        //@―---------------------------------------------------------------------------
        //! @brief      シザー矩形を設定
        //! 
        //! @details    ビューポートのどの部分に描画するか。
        //!             値はピクセル指定で、どの矩形を使用するかはジオメトリシェーダで指定できます。
        //@―---------------------------------------------------------------------------
        void setScissorRect(const IntRect* pRect, s32 num);

        //@―---------------------------------------------------------------------------
        //! @brief      ビューポートを設定
        //! 
        //! @details    描画ターゲットのどの範囲に書き込むか。
        //!             Z値以外はピクセル指定で、どのビューポートを使用するかはジオメトリシェーダで指定できます。
        //@―---------------------------------------------------------------------------
        void setViewport(const Viewport* pViewport, s32 num);

        //@―---------------------------------------------------------------------------
        //! @brief      レンダーターゲットの色をRenderTargetに設定した色でクリア
        //@―---------------------------------------------------------------------------
        void clearColors(u32 mask = -1);

        //@―---------------------------------------------------------------------------
        //! @brief      レンダーターゲットのデプスとステンシルをクリア
        //@―---------------------------------------------------------------------------
        void clearDepthStencil();

        //@―---------------------------------------------------------------------------
        //! @brief      ルートシグネチャを設定
        //@―---------------------------------------------------------------------------
        void setRootSignature(const class RootSignature& pipeline);

        //@―---------------------------------------------------------------------------
        //! @brief      描画パイプラインを設定
        //@―---------------------------------------------------------------------------
        void setPipelineState(const class PipelineState& pipeline);

        //@―---------------------------------------------------------------------------
        //! @brief      頂点バッファを設定
        //@―---------------------------------------------------------------------------
        void setVertexBuffer(const class Buffer& buffer);

        //@―---------------------------------------------------------------------------
        //! @brief      頂点バッファを設定
        //@―---------------------------------------------------------------------------
        void setVertexBuffers(Span<const Buffer*> buffers);

        //@―---------------------------------------------------------------------------
        //! @brief      インデックスバッファを設定
        //@―---------------------------------------------------------------------------
        void setIndexBuffer(const class Buffer& buffer);

        //@―---------------------------------------------------------------------------
        //! @brief      デスクリプタテーブルを設定
        //@―---------------------------------------------------------------------------
        void setRootDesciptorTable(const struct SetDescriptorTableParam*, s32 num);

        //@―---------------------------------------------------------------------------
        //! @brief      描画
        //@―---------------------------------------------------------------------------
        void draw(const DrawParam&);

        //@―---------------------------------------------------------------------------
        //! @brief      インデックス描画
        //@―---------------------------------------------------------------------------
        void drawIndexed(const DrawIndexedParam&);

    };


}// namespace pb::rhi