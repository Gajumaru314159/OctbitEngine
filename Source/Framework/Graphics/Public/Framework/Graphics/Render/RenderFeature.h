//***********************************************************
//! @file
//! @brief		
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Core/Utility/Ref.h>
#include <Framework/Graphics/Forward.h>
#include <Framework/Graphics/Camera.h>

namespace ob::graphics {

	//@―---------------------------------------------------------------------------
	//! @brief      描画機能
	//! @details    O3DEでいうところのFeatureProcessor。
	//!				初期状態は非アクティブです。
	//@―---------------------------------------------------------------------------
	class RenderFeature {
	public:

		OB_RTTI();

		virtual ~RenderFeature(){}

		//@―---------------------------------------------------------------------------
		//! @brief      必要なRenderStepをRenderStepListに追加する
		//! @details	描画処理は登録されたステップ順に行われます。
		//@―---------------------------------------------------------------------------
		virtual void setupView(RenderStepSet&) {}

		//@―---------------------------------------------------------------------------
		//! @brief      アクティブにする
		//@―---------------------------------------------------------------------------
		virtual void activate() {}

		//@―---------------------------------------------------------------------------
		//! @brief      非アクティブにする
		//@―---------------------------------------------------------------------------
		virtual void deactivate() {}

		//@―---------------------------------------------------------------------------
		//! @brief      シミュレートする
		//! @details	パーティクルの更新やアニメーションの更新などCPU上での更新処理を実行します。
		//@―---------------------------------------------------------------------------
		virtual void simulate() {}

		//@―---------------------------------------------------------------------------
		//! @brief      描画コマンドをCommandRecorderに記録します。
		//! @details	毎フレーム実行されます。
		//@―---------------------------------------------------------------------------
		virtual void render(CommandRecorder&) {}

	public:

		//@―---------------------------------------------------------------------------
		//! @brief      所属シーンを取得する
		//@―---------------------------------------------------------------------------
		RenderScene& getScene()const { return m_scene; }

	protected:
		RenderFeature(RenderScene& scene) :m_scene(scene) {}
	private:
		RenderScene& m_scene;
	};

}