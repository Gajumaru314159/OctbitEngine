//***********************************************************
//! @file
//! @brief		スワップチェーン
//! @author		Gajumaru
//***********************************************************
#pragma once

//===============================================================
// 前方宣言
//===============================================================
namespace ob::graphic {
    class Device;
    class ISwapChain;
    class ITexture;
}


//===============================================================
// クラス宣言
//===============================================================
namespace ob::graphic {

    //@―---------------------------------------------------------------------------
    //! @brief      スワップチェーン
    //! 
    //! @details    ウィンドウの情報は platform::Window で制御されますが、このクラスでは
    //!             グラフィック機能と結びつけるために必要な情報を制御します。
    //@―---------------------------------------------------------------------------
    class SwapChain:private Noncopyable {
        friend class Device;
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  バックバッファの数を取得
        //@―---------------------------------------------------------------------------
        SwapChain();


        //@―---------------------------------------------------------------------------
        //! @brief  デストラクタ
        //@―---------------------------------------------------------------------------
        ~SwapChain();


        //@―---------------------------------------------------------------------------
        //! @brief  明示的開放
        //@―---------------------------------------------------------------------------
        void release();


        //@―---------------------------------------------------------------------------
        //! @brief  空か
        //@―---------------------------------------------------------------------------
        bool isEmpty()const noexcept;


        //===============================================================
        // ゲッター
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  バックバッファの数を取得
        //@―---------------------------------------------------------------------------
        s32 getBackBufferCount()const;


        //@―---------------------------------------------------------------------------
        //! @brief  描画先テクスチャを取得
        //@―---------------------------------------------------------------------------
        ITexture* getRederTexture(s32 index)const;


        //@―---------------------------------------------------------------------------
        //! @brief  VSyncが有効か
        //@―---------------------------------------------------------------------------
        s32 isVSyncEnabled()const;


        //@―---------------------------------------------------------------------------
        //! @brief  HDRが有効か
        //@―---------------------------------------------------------------------------
        s32 isHdrEnabled()const;


        //===============================================================
        // 更新
        //===============================================================
        
        //@―---------------------------------------------------------------------------
        //! @brief  バックバッファのサイズを変更
        //@―---------------------------------------------------------------------------
        bool resizeBackBuffer(const Size& size);


        //@―---------------------------------------------------------------------------
        //! @brief      更新
        //! 
        //! @details    表示するテクスチャを次のバックバッファにします。
        //@―---------------------------------------------------------------------------
        void update();


    private:

        ISwapChain* m_impl;

    };

}// namespace pb::graphic