//***********************************************************
//! @file
//! @brief		シェーダ
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Graphic/Utility/GraphicObjectHolder.h>

//===============================================================
// クラス定義
//===============================================================
namespace ob::core{
    class Blob;
}

//===============================================================
// クラス定義
//===============================================================
namespace ob::graphic {

    //@―---------------------------------------------------------------------------
    //! @brief      シェーダ
    //@―---------------------------------------------------------------------------
    class Shader {
        friend class Device;
        OB_DEFINE_GRAPHIC_OBJECT_HOLDER(Shader);
    protected:

        Shader() = default;

    };

    //@―---------------------------------------------------------------------------
    //! @brief      頂点シェーダ
    //@―---------------------------------------------------------------------------
    class VertexShader:public Shader {
        OB_DEFINE_GRAPHIC_OBJECT_HOLDER(VertexShader);
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        VertexShader();


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ
        //! 
        //! @param code     シェーダコード
        //! @param name     オブジェクト名
        //@―---------------------------------------------------------------------------
        VertexShader(const String& code, StringView name = TC("VertexShader"));


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ
        //! 
        //! @param binary   シェーダ・バイナリ
        //! @param name     オブジェクト名
        //@―---------------------------------------------------------------------------
        VertexShader(const Blob& binary, StringView name = TC("VertexShader"));

    };


    //@―---------------------------------------------------------------------------
    //! @brief      シェーダ
    //@―---------------------------------------------------------------------------
    class PixelShader :public Shader {
        OB_DEFINE_GRAPHIC_OBJECT_HOLDER(PixelShader);
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        PixelShader();


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ
        //! 
        //! @param code     シェーダコード
        //! @param name     オブジェクト名
        //@―---------------------------------------------------------------------------
        PixelShader(const String& code, StringView name = TC("PixelShader"));


        //@―---------------------------------------------------------------------------
        //! @brief          コンストラクタ
        //! 
        //! @param binary   シェーダ・バイナリ
        //! @param name     オブジェクト名
        //@―---------------------------------------------------------------------------
        PixelShader(const Blob& binary, StringView name = TC("PixelShader"));

    };


}// namespace pb::graphic