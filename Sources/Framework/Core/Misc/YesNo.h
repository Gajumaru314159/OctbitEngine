//***********************************************************
//! @file
//! @brief		Yes/No
//! @author		Gajumaru
//***********************************************************
#pragma once

namespace ob {

    //@―---------------------------------------------------------------------------
    //! @brief  Yes/No表現
    //@―---------------------------------------------------------------------------
    template <class Tag>
    class YesNo {
    public:

        struct Helper {
            bool yesNo;
        };

    public:

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        explicit constexpr YesNo(bool yesNo) noexcept
            : m_yesNo{ yesNo } {
        }

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        constexpr YesNo(Helper helper) noexcept
            : m_yesNo(helper.yesNo) {
        }

        //@―---------------------------------------------------------------------------
        //! @brief  bool変換演算子
        //@―---------------------------------------------------------------------------
        explicit constexpr operator bool() const noexcept {
            return m_yesNo;
        }


    public:

        static constexpr Helper Yes{ true };    //!< Yesを表す定数
        static constexpr Helper No{ false };    //!< Yesを表す定数

    private:

        bool m_yesNo;   // 内部表現

    };






    //===============================================================
    // インライン関数
    //===============================================================
    //! @cond



    //! @endcond
}// namespcae ob