//***********************************************************
//! @file
//! @brief		ファイルストリーム
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Core/File/Stream.h>
#include <Framework/Core/File/Path.h>

namespace ob::core {

	//@―---------------------------------------------------------------------------
	//! @brief  ファイルストリーム
	//@―---------------------------------------------------------------------------
	class FileStream :public Stream {
	public:

		//@―---------------------------------------------------------------------------
		//! @brief  ファイルを開く
		//! 
		//! @param path ファイルパス
		//! @param mode モード
		//@―---------------------------------------------------------------------------
		FileStream(const Path& path, FileOpenMode mode = FileOpenMode::Read);

		
		//@―---------------------------------------------------------------------------
		//! @brief  デストラクタ
		//@―---------------------------------------------------------------------------
		~FileStream();


		//@―---------------------------------------------------------------------------
		//! @brief  有効な状態か
		//@―---------------------------------------------------------------------------
		operator bool()const;


		//@―---------------------------------------------------------------------------
		//! @brief  読み込み可能か
		//@―---------------------------------------------------------------------------
		bool canRead()const override;


		//@―---------------------------------------------------------------------------
		//! @brief  書き込み可能か
		//@―---------------------------------------------------------------------------
		bool canWrite()const override;


		//@―---------------------------------------------------------------------------
		//! @brief  サイズ取得
		//@―---------------------------------------------------------------------------
		size_t size()const override;


		//@―---------------------------------------------------------------------------
		//! @brief  シーク位置取得
		//@―---------------------------------------------------------------------------
		size_t position()const override;


		//@―---------------------------------------------------------------------------
		//! @brief  読み込み
		//! 
		//! @param buffer 　 読み込みデータ格納先のポインタ
		//! @param byteCount 読み込むバイト数
		//! @return 読み込んだデータ個数※エラー時やファイルの末端に達したときは byteCount 以下の値が返される
		//@―---------------------------------------------------------------------------
		size_t read(void* buffer, size_t byteCount) override;


		//@―---------------------------------------------------------------------------
		//! @brief  書き込み
		//! 
		//! @param buffer 　 書き込むデータ格納先のポインタ
		//! @param byteCount 書き込むバイト数
		//! @return 読み込んだデータ個数※エラー時やファイルの末端に達したときは byteCount 以下の値が返される
		//@―---------------------------------------------------------------------------
		size_t write(void* buffer, size_t byteCount) override;


		//@―---------------------------------------------------------------------------
		//! @brief  シーク
		//! 
		//! @param offset 　 基準からの移動量
		//! @param origin	 基準位置
		//! @return 0 のとき成功
		//@―---------------------------------------------------------------------------
		size_t seek(offset_t offset, SeekOrigin origin) override;


		//@―---------------------------------------------------------------------------
		//! @brief  バッファのフラッシュ
		//! 
		//! @details 書き込み中のデータを即時反映させる。
		//@―---------------------------------------------------------------------------
		void flush() override;


	private:

		Pimpl<class FileStreamImpl> m_impl;

	};

}// namespcae ob