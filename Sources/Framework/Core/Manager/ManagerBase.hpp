//***********************************************************
//! @file
//! @brief		ファイル説明
//! @author		Gajumaru
//***********************************************************
#pragma once

namespace ob::core{

    //@―---------------------------------------------------------------------------
    //! @brief  説明
    //@―---------------------------------------------------------------------------
    class ManagerBase {
    public:

        //===============================================================
        // コンストラクタ / デストラクタ
        //===============================================================

        //@―---------------------------------------------------------------------------
        //! @brief  説明
        //@―---------------------------------------------------------------------------
        virtual void Dispose() {}

    private:



    };

    class ManagerStack {
    public:

        template<class T,typename... Args>
        enable_if_t<is_base_of_v<T,ManagerBase>,void>
        AddManager(Args... args) {
            m_stack.push(new T(forward(args)));
        }

        void Shutdown() {
            while (!m_stack.empty()) {
                ManagerBase* pManager = m_stack.top();
                m_stack.pop();
                pManager->Dispose();
            }
        }

    private:

        stack<ManagerBase*> m_stack;

    };




    //===============================================================
    // インライン関数
    //===============================================================
    //! @cond



    //! @endcond
}// namespcae ob