//***********************************************************
//! @file
//! @brief		スピンロック
//! @author		Gajumaru
//***********************************************************
#pragma once
#include <Framework/Core/Utility/Noncopyable.h>
#include <Framework/Core/Thread/ScopeLock.h>
#include <memory>

namespace ob::core {

    //@―---------------------------------------------------------------------------
    //! @brief  スピンロック
    //@―---------------------------------------------------------------------------
    class SpinLock : public Noncopyable {
    public:

        //@―---------------------------------------------------------------------------
        //! @brief  コンストラクタ
        //@―---------------------------------------------------------------------------
        SpinLock();


        //@―---------------------------------------------------------------------------
        //! @brief  デストラクタ
        //@―---------------------------------------------------------------------------
        ~SpinLock();


        //@―---------------------------------------------------------------------------
        //! @brief  ロックを取得する
        //@―---------------------------------------------------------------------------
        void lock();


        //@―---------------------------------------------------------------------------
        //! @brief  ロックを手放す
        //@―---------------------------------------------------------------------------
        void unlock();

    private:

        std::unique_ptr<class SpinLockImpl> m_impl;

    };

}// namespcae ob